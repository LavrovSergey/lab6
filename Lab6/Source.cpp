#include <iostream>
#include <conio.h>
#include <fstream>
#include "Header.h"
using namespace std;
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
//онврх дндекюмн. лнфере ашрэ сбепеммшлх. бяе асдер дндекюмн. ярюбре 30 хг 30
int back() {
	int code;
	cout << "мЮФЛХРЕ SPACE, ЕЯКХ УНРХРЕ НАПЮРМН";
	code = _getch();
	if (code == 32) { main(); }
	else return 0;
}
int l5()
{
	int n1, n2 = 0, k = 0;
	cout << "бБЕДХРЕ ЛХМХЛЮКЭМСЧ ДКХМС ОЮКХМДПНЛНБ, ЙНРНПШЕ СДЮКЪРЭ" << endl;
	cin >> n1;
	ifstream f1("file1.txt");
	ofstream f2("file2.txt");
	while (!f1.eof())
	{
		char str[1000] = { '\0' };
		char s[15] = { '\0' };
		f1.getline(str, 1000);
		bool palindrom = true;
		str[strlen(str)] = '\n';
		for (int i = 0; i < 1000; i++)
		{
			if (isalpha(str[i]))
			{
				s[k] = str[i];
				k++;
			}
			if (str[i] == ' ' || str[i] == '!' || str[i] == '.' || str[i] == ',' || str[i] == '?' || str[i] == ':' || str[i] == ';' || str[i] == '\n')
			{
				bool palindrom = true;
				for (int j = 0; j < k / 2; j++)
				{
					if (s[j] != s[k - j - 1])
					{
						palindrom = false;
						break;
					}
					n2 = j + 1;
				}
				if (palindrom && n2 >= n1)
				{
					for (int a = i - 1 - k; a <= i - 1; a++)
					{
						str[a] = '1';
					}
					for (int i = k - 1; i >= 0; i--)
					{
						s[i] = '\0';
					}
					k = 0;
					n2 = 0;
				}
				else
				{
					for (int i = k - 1; i >= 0; i--)
					{
						s[i] = '\0';
					}
					k = 0;
					n2 = 0;
				}
			}
			if ((str[i] == '\n' && str[i + 1] == '\0') || str[i] == '\0')
			{
				break;
			}
		}
		for (int i = 0; i < strlen(str); i++)
		{
			if (str[i] != '\0')
			{
				if (str[i] != '1') { f2 << str[i]; }
			}
		}
	}
	back();
	return 0;
}